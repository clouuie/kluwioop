@page "/"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@inject NavigationManager Navigation

<!-- PageTitle removed: add head/title management in _Host.cshtml or reference the Microsoft.AspNetCore.Components.Web.Extensions.Head package -->
<h1>Welcome back!</h1>
@if (isLoggedIn)
{
    <div class="alert alert-success" role="alert">
        Logged in as @loginModel.Username
    </div>
}

<EditForm Model="@loginModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Username</label>
        <InputText class="form-control" @bind-Value="loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Password</label>
        <InputText class="form-control" @bind-Value="loginModel.Password" type="password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="form-check">
            <InputCheckbox class="form-check-input" @bind-Value="loginModel.RememberMe" id="rememberMe" />
            <label class="form-check-label" for="rememberMe">Remember Me</label>
        </div>
        <a href="/forgot-password">Forgot Password?</a>
    </div>

    <button class="btn btn-primary" type="submit">Login</button>
</EditForm>

<div class="mt-3">
    Don't have an account?
    <a class="btn btn-link p-0 align-baseline" href="/register">Register</a>
</div>

@code {
    private LoginModel loginModel = new();

    private bool isLoggedIn;

    private void HandleValidSubmit()
    {
        // Replace with real authentication logic.
        isLoggedIn = true;

        // Optionally navigate after login:
        // Navigation.NavigateTo("/dashboard");
    }

    private void NavigateToRegister()
    {
        Navigation.NavigateTo("/register");
    }

    private class LoginModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string? Username { get; set; }

        [Required(ErrorMessage = "Password is required")]
        public string? Password { get; set; }

        public bool RememberMe { get; set; }
    }
}
